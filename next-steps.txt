

Step One:

npx create-next-app next-task-manager
âˆš Would you like your code inside a `src/` directory? ... Yes


cd next-task-manager

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p


tailwind.config.js:
    /** @type {import('tailwindcss').Config} */
    module.exports = {
    content: [
        "./app/**/*.{js,ts,jsx,tsx}",
        "./pages/**/*.{js,ts,jsx,tsx}",
        "./components/**/*.{js,ts,jsx,tsx}",
    ],
    theme: {
        extend: {},
    },
        plugins: [],
    }



src/app/globals.css
    @tailwind base;
    @tailwind components;
    @tailwind utilities;


npm run dev



***


Step Two:


CREATE DATABASE next-task-manager;

npm install prisma @prisma/client
npm install axios
npx prisma init


update .env file:
DATABASE_URL="postgresql://postgres:root@localhost:5432/next-task-manager?schema=public"


Update prisma/schema.prisma
    generator client {
        provider = "prisma-client-js"
    }

    datasource db {
        provider = "postgresql"
        url      = env("DATABASE_URL")
    }

    model Task {
        id        Int      @id @default(autoincrement())
        title     String
        description String?
        status    String   @default("pending")
        createdAt DateTime @default(now())
        updatedAt DateTime @updatedAt
    }


npx prisma migrate dev --name init
npx prisma generate
npx prisma studio


***

Step Three:


Create Backend:
    src/app/api/tasks
        route.ts
        [id]/route.ts

Create Frontend:
    src/components/TaskForm.tsx
    src/app/page.tsx


npm run dev




***

Step Four (optional):
    Convert to SQLite

    prisma/schema.prisma

    datasource db {
        provider = "sqlite"
        url      = "file:./dev.db"
    }


    .env 
    DATABASE_URL="file:./dev.db"

    delete prisma/migrations folder


    npx prisma migrate reset --force
    npx prisma migrate dev --name init

    npx prisma generate
    npx prisma studio




